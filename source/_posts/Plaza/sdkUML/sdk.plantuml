@startuml

package "webrtc"
{

    package "call"
    {
        class Call
        {
            Map<VideoReceiveStream> _video_receive_streams
            RtpStreamReceiverController _video_receiver_controller;
            VideoReceiveStream* CreateVideoReceiveStream()
            VideoSendStream*    CreateVideoSendStream()
        }
    }

    package "video"
    {
        class VideoReceiveStream
        {
            Render *render = WebRtcVideoReceiveStream
        }

        class VideoSendStream
        {

        }
    }

    package "media.engine"
    {
        class VideoMediaChannel
        {
            void getStats()
        }

        class WebRtcVideoMediaChannel
        {
            Map<WebRtcVideoSendStream>          _sendStreams
            Map<WebRtcVideoReceiveStream>       _recvStreams
            Call                                _call
            void getStats()
            void AddRecvStream()
            void AddSendStream()
        }

        class WebRtcVideoReceiveStream
        {
            VideoReceiveStream                  _stream
            Call                                _call
        }

        class WebRtcVideoSendStream
        {
            VideoSendStream                     _stream
            Call                                _call
        }

        class VoiceMediaChannel
        {
            void getStats()
        }

        class WebRtcVoiceMediaChannel
        {
            void getStats()
        }

        class MediaChannel
        {
            
        }


        MediaChannel <|-- VoiceMediaChannel
        MediaChannel <|-- VideoMediaChannel
        VideoMediaChannel <|-- WebRtcVideoMediaChannel
        VoiceMediaChannel <|-- WebRtcVoiceMediaChannel

        WebRtcVideoMediaChannel o-- WebRtcVideoReceiveStream
        WebRtcVideoMediaChannel o-- WebRtcVideoSendStream
        WebRtcVideoReceiveStream *-- VideoReceiveStream
        WebRtcVideoSendStream *-- VideoSendStream
        WebRtcVideoMediaChannel *-- Call
        WebRtcVideoReceiveStream *-- Call
    }

}

package "SDK"
{
    package "MediaStream"
    {
        class MediaStream
        {
            MediaEngineWrapper _engine
            void getVideoInfo()
            void getShareInfo()
            void getAudioInfo()
        }
        
        class MediaEngineWrapper
        {
            WebVideoMediaChannel            _video
            WebVideoMediaChannel            _share
            VoiceMediaChannel               _audio
            MediaEngineInterface            _engine
            Call                            _call
            void getVideoInfo()
            void getShareInfo()
            void getAudioInfo()
            void createMediaChannels()
            void createVideoReceiveStream()
            void createShareReceiveStream()
        }

    }

    package "MediaEngine"
    {

        class VideoManager
        {
            MediaStream  _mediaStream
            void onStatistics()
        }

        class ShareManager
        {
            MediaStream  _mediaStream
            void onStatistics()
        }

        class AudioManager
        {
            MediaStream  _mediaStream
            void onStatistics()
        }

        class MaxMetrics
        {
            HTTP _http
        }
        
        package ELK <<Cloud>>
        {
            class HTTP
        }
        
        class ConfManager
        { 
            MediaStream  _mediaStream
            VidoeManager _videoM
            AudioManager _videoM
            ShareManager _videoM
            MaxMetrics _metrics
            void onTimer()
        }
    }

}



WebRtcVideoMediaChannel --o MediaEngineWrapper
WebRtcVoiceMediaChannel --o MediaEngineWrapper

MediaEngineWrapper --o MediaStream

VideoManager --o ConfManager
ShareManager --o ConfManager
AudioManager --o ConfManager

MediaStream --o VideoManager
MediaStream --o ShareManager
MediaStream --o AudioManager
MediaStream --o ConfManager
HTTP  --* MaxMetrics
MaxMetrics -left-* ConfManager

@enduml

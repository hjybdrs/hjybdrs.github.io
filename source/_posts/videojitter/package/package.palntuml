@startuml

package "video" {

    class VideoReceiveStream
    {
        void OnCompleteFrame(FrameObject);
        void Decode();
    }

    class RtpVideoStreamReceiver
    {
        PacketBuffer packet_buffer;
        void OnReceivePayloadData();
        void OnReceivedFrame(vector<RtpFrameObject>);
        void OnCompleteFrame(FrameObject);
        
    }

}

package "call" {

    class VideoReceiveControl
    {
        void CreateReceiver()
    }

}

package "common_video"
{
    class EncodedImage
    {

    }

}

package "modules.video_coding" {

    class FrameBuffer
    {
        int insertFrame(FrameObject);
        bool nextFrame(waittime, FrameObject);
    }

    class PacketBuffer
    {
        void insertPacket(VCMPacket )
        vector<RtpFrameObject> FindFrames();
    }

    class ReferenceFinder
    {
        void ManageFrame(RtpFrameObject);
    }

    class Packet
    {

    }

    class VCMPacket
    {

    }

    class RtpFrameObject
    {

    }

    class FrameObject
    {

    }

    class VCMEncodedFrame
    {
        
    }

    VideoReceiveControl --* RtpVideoStreamReceiver
    RtpVideoStreamReceiver --* VideoReceiveStream
    FrameBuffer --* VideoReceiveStream
    PacketBuffer --* RtpVideoStreamReceiver
    ReferenceFinder --* RtpVideoStreamReceiver
    Packet --o PacketBuffer
    VCMPacket --* PacketBuffer
    EncodedImage <|-- VCMEncodedFrame
    VCMEncodedFrame <|-- FrameObject
    FrameObject <|-- RtpFrameObject
    PacketBuffer *-- RtpFrameObject

}

@enduml